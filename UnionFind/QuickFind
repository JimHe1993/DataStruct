'''
并查集——Quick Find
用列表来实现
'''

__author__ = 'Jim'

import time
import random


class QuickFind(object):
    def __init__(self, n):
        self.__id = [i for i in range(n)]  # 初始化, 每一个id[i]指向自己, 没有合并的元素
        self.__count = n

    # 查找过程, 查找元素p所对应的集合编号
    def find(self, p):
        assert 0 <= p <= self.__count - 1
        return self.__id[p]

    # 查看元素p和元素q是否所属一个集合
    # O(1)复杂度
    def is_connected(self, p, q):
        assert 0 <= p <= self.__count
        assert 0 <= q <= self.__count

        return self.find(p) == self.find(q)

    def union(self, p, q):
        assert 0 <= p <= self.__count
        assert 0 <= q <= self.__count
        p_id = self.find(p)
        q_id = self.find(q)

        if p_id == q_id:
            return

        # 将两个集合中的所有元素合并为一个集合
        # O(n) 复杂度
        for i in range(self.__count):
            if self.__id[i] == p_id:
                self.__id[i] = q_id

    def get_id(self):
        return self.__id


if __name__ == "__main__":
    qf = QuickFind(10000)

    random.seed(0)
    start = time.time()
    for _ in range(10000):
        a = random.randint(0, 10000-1)
        b = random.randint(0, 10000-1)
        qf.union(a, b)
    # print('是否有进行连接：', qf.get_id())
    # print(qf.is_connected(0, 4))
    # print(qf.is_connected(1, 3))
    end = time.time()
    print('时间：', end-start)  # 时间： 4.738361120223999

