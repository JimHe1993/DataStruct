'''
二分查找
'''

__author__ = 'Jim He'


def binary_search(aList, target):
    '''
    二分查找——在有序数列中
    1、在[i ... j]中查找元素target，每次二分
    :param aList: 待查有序列表
    :param target: 目标值
    :return: 目标值在列表中的索引，-1表示查无元素
    '''
    if not aList:
        return -1
    i = 0
    j = len(aList) - 1
    while i <= j:
        mid = i + (j - i) // 2
        if aList[mid] == target:
            return mid
        elif aList[mid] > target:
            j = mid - 1
        else:
            i = mid + 1
    return -1


def __binary_search(aList, left, right, target):
    if left > right:
        return -1

    mid = left + (right - left) // 2
    if aList[mid] == target:
        return mid
    elif aList[mid] > target:
        return __binary_search(aList, left, mid - 1, target)
    else:
        return __binary_search(aList, mid + 1, right, target)


def binary_search_recursion(aList, target):
    if not aList:
        return -1

    return __binary_search(aList, 0, len(aList)-1, target)


if __name__ == "__main__":
    pass
